{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Resources": {
      "engineeringVpc": {
        "Type": "AWS::EC2::VPC",
        "Properties": {
          "EnableDnsSupport": "true",
          "EnableDnsHostnames": "true",
          "CidrBlock": "10.0.0.0/18",
          "Tags": [
            {
              "Key": "Environment",
              "Value": "Test"
            }
          ]
        }
      },
      "publicSubnet1": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "VpcId": {
            "Ref": "engineeringVpc"
          },
          "CidrBlock": "10.0.0.0/24",
          "AvailabilityZone" : "us-east-1a"
        }
      },
  
      "publicSubnet2": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "VpcId": {
            "Ref": "engineeringVpc"
          },
          "CidrBlock": "10.0.1.0/24",
          "AvailabilityZone" : "us-east-1b"
        }
      },
  
      "webserversSG": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "VpcId": {
            "Ref": "engineeringVpc"
          },
          "GroupDescription": "Allow access from HTTP and SSH traffic",
          "SecurityGroupIngress": [
            {
              "IpProtocol": "tcp",
              "FromPort": "80",
              "ToPort": "80",
              "CidrIp": "0.0.0.0/0"
            },
            {
              "IpProtocol": "tcp",
              "FromPort": "22",
              "ToPort": "22",
              "CidrIp": {"Ref": "YourIp"}
            }
          ]
        }
      },
      "internetGW": {
        "Type": "AWS::EC2::InternetGateway",
        "Properties": {}
      },
      "vpcGwAttachment": {
        "Type": "AWS::EC2::VPCGatewayAttachment",
        "Properties": {
          "InternetGatewayId": {
            "Ref": "internetGW"
          },
          "VpcId": {
            "Ref": "engineeringVpc"
          }
        }
      },
      "publicRT": {
        "Type": "AWS::EC2::RouteTable",
        "Properties": {
          "VpcId": {
            "Ref": "engineeringVpc"
          }
        }
      },
      "publicRoute": {
        "Type": "AWS::EC2::Route",
        "Properties": {
          "DestinationCidrBlock": "0.0.0.0/0",
          "RouteTableId": {
            "Ref": "publicRT"
          },
          "GatewayId": {
            "Ref": "internetGW"
          }
        },
        "DependsOn": [
          "internetGW"
        ]
      },
      "publicSubnet1RTassoc": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "RouteTableId": {
            "Ref": "publicRT"
          },
          "SubnetId": {
            "Ref": "publicSubnet1"
          }
        }
      },
      "publicSubnet2RTassoc": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "RouteTableId": {
            "Ref": "publicRT"
          },
          "SubnetId": {
            "Ref": "publicSubnet2"
          }
        }
      },
      "web1": {
        "Type":"AWS::EC2::Instance",
        "Properties": {
            "AvailabilityZone":"us-east-1a",
            "InstanceType":{"Ref": "InstanceType"},
            "ImageId":"ami-3ea13f29",
            "KeyName": {"Ref" : "KeyPair"},
            "NetworkInterfaces": [ {
                "AssociatePublicIpAddress": "true",
                "DeviceIndex": "0",
                "GroupSet": [{ "Ref" : "webserversSG" }],
                "SubnetId": { "Ref" : "publicSubnet1" }
              } ],
            "Tags": [
                {
                  "Key": "Name",
                  "Value": "web1"
                }
              ]
          }
      },
      "web2": {
        "Type":"AWS::EC2::Instance",
        "Properties": {
            "AvailabilityZone":"us-east-1b",
            "InstanceType":{"Ref": "InstanceType"},
            "ImageId":"ami-3ea13f29",
            "KeyName": {"Ref" : "KeyPair"},
            "NetworkInterfaces": [ {
                "AssociatePublicIpAddress": "true",
                "DeviceIndex": "0",                
                "GroupSet": [{ "Ref" : "webserversSG" }],
                "SubnetId": { "Ref" : "publicSubnet2" }
              } ],
            "Tags": [
                {
                  "Key": "Name",
                  "Value": "web2"
                }
              ]
          } 
        },
        "engineeringLB": {
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties": {
                "Name": "engineeringLB",
                "SecurityGroups": [{ "Ref" : "webserversSG" }],

                "Subnets": [
                    {"Ref": "publicSubnet1"},
                     {"Ref": "publicSubnet2"}
                ]

            },
            "DependsOn":["web2"]
        },
        "loadbalancertg": {
            "Type" : "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties" : {
                "Port": "80",
                "Protocol": "HTTP",
                "HealthCheckPath": "/",
                "VpcId": {
                    "Ref": "engineeringVpc"
                  },
                  "Targets":
                    [{"Id":{"Ref":"web1"}, "Port" : 80}, {"Id":{"Ref":"web2"}, "Port" : 80}]
                
            },"DependsOn":["engineeringLB"]
            },
        "loadbalancerlistener": {
            "Type" : "AWS::ElasticLoadBalancingV2::Listener",
            "Properties" : {
                "DefaultActions": [{"TargetGroupArn":{"Ref":"loadbalancertg"},"Type": "forward"}],
                "LoadBalancerArn": {"Ref":"engineeringLB"},
                "Port": "80",
                "Protocol": "HTTP"
            },"DependsOn":["engineeringLB"]
        }
        },
    "Parameters": {
        "InstanceType": {
          "Description": "Server instance type",
          "Type": "String",
          "Default": "t2.micro",
          "AllowedValues": [
            "t2.small",
            "t2.micro"
          ],
          "ConstraintDescription": "Must be a valid EC2 type."
        },
        "KeyPair":{
            "Description": "Name of your EC2 KeyPair to enable SSH access to the instances.",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair."        
        },
        "YourIp": {
            "Description": "The current CIDR IP address of your workstation (x.x.x.x/32).",
            "Type": "String"
          }
      },
      "Outputs": {
        "weburl": {
          "Value": {
            "Fn::Join": [
              "",
              [
                "http://",
                {
                  "Fn::GetAtt": [
                    "engineeringLB",
                    "DNSName"
                  ]
                }
              ]
            ]
          },
          "Description": "Load Balancer DNS Name."
        }
      }
  }

  
